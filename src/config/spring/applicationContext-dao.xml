<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">  
   <!--  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">   -->
<!-- 加载properties文件，加载数据库配置 -->
<!-- 加载数据库连接的资源文件 
    <context:property-placeholder location="classpath:sqlMap.properties"/> -->
	<!-- 配置数据源  dataSource  -->
 
        <!-- 指定连接数据库的驱动 -->
        <!-- 指定连接数据库的URL -->
        <!-- 指定连接数据库的用户名 -->
        <!-- 指定连接数据库的密码 
      <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.pwd}"/>
      </bean>  -->
  <bean id="dataSource"  
          class="org.apache.commons.dbcp.BasicDataSource"  
          destroy-method="close">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>  
        <property name="url" value="jdbc:mysql://localhost:3306/test"/>  
        <property name="username" value="root"/>  
        <property name="password" value="123456"/>    
        <!--maxActive: 最大连接数量   -->
        <property name="maxActive" value="150"/>   
        <!--minIdle: 最小空闲连接    -->
        <property name="minIdle" value="5"/>  
        <!--maxIdle: 最大空闲连接     --> 
        <property name="maxIdle" value="20"/>  
        <!--initialSize: 初始化连接  --> 
        <property name="initialSize" value="30"/>   
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="true"/>   
        <!--removeAbandoned: 是否自动回收超时连接-->    
       
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)    --> 
        <property name="removeAbandonedTimeout" value="10"/> 
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒  -->
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位.   -->
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量  --> 
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 -->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
   
    </bean>   
  
      
<!-- sqlSessionFactory -->
<!-- 配置工厂 -->
	<bean  id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
           <property name="dataSource" ref="dataSource"></property>
           <property name="configLocation">
             <value>classpath:config/mybatis/sqlMapConfig.xml</value>
           </property>
     </bean>
       
        
	<!-- 配置mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baidu.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory">
		
		</property>
	</bean>


</beans>

